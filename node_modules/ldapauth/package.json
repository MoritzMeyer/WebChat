{
  "_args": [
    [
      {
        "raw": "https://github.com/DimensionSoftware/node-ldapauth",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "https://github.com/DimensionSoftware/node-ldapauth",
        "spec": "git+https://github.com/DimensionSoftware/node-ldapauth.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:DimensionSoftware/node-ldapauth.git",
          "sshUrl": "git+ssh://git@github.com/DimensionSoftware/node-ldapauth.git",
          "httpsUrl": "git+https://github.com/DimensionSoftware/node-ldapauth.git",
          "gitUrl": "git://github.com/DimensionSoftware/node-ldapauth.git",
          "shortcut": "github:DimensionSoftware/node-ldapauth",
          "directUrl": "https://raw.githubusercontent.com/DimensionSoftware/node-ldapauth/master/package.json"
        }
      },
      "/home/moritz/Dropbox/Studium/Fulda/1_SS17/Cloud_Computing/Project/Git/WebChat"
    ]
  ],
  "_from": "git+https://github.com/DimensionSoftware/node-ldapauth.git",
  "_id": "ldapauth@2.3.0",
  "_inCache": true,
  "_location": "/ldapauth",
  "_phantomChildren": {
    "dtrace-provider": "0.2.8",
    "jsprim": "0.3.0",
    "mv": "0.0.5",
    "verror": "1.1.0"
  },
  "_requested": {
    "raw": "https://github.com/DimensionSoftware/node-ldapauth",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "https://github.com/DimensionSoftware/node-ldapauth",
    "spec": "git+https://github.com/DimensionSoftware/node-ldapauth.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:DimensionSoftware/node-ldapauth.git",
      "sshUrl": "git+ssh://git@github.com/DimensionSoftware/node-ldapauth.git",
      "httpsUrl": "git+https://github.com/DimensionSoftware/node-ldapauth.git",
      "gitUrl": "git://github.com/DimensionSoftware/node-ldapauth.git",
      "shortcut": "github:DimensionSoftware/node-ldapauth",
      "directUrl": "https://raw.githubusercontent.com/DimensionSoftware/node-ldapauth/master/package.json"
    }
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "git+https://github.com/DimensionSoftware/node-ldapauth.git#b4338f3f1d904e3ffb1f7054a841f1f313060b61",
  "_shasum": "4ac79459b5446f79382c8b2a4cf2f943e54cff91",
  "_shrinkwrap": null,
  "_spec": "https://github.com/DimensionSoftware/node-ldapauth",
  "_where": "/home/moritz/Dropbox/Studium/Fulda/1_SS17/Cloud_Computing/Project/Git/WebChat",
  "author": {
    "name": "Trent Mick",
    "email": "trentm@gmail.com",
    "url": "http://trentm.com"
  },
  "bugs": {
    "url": "https://github.com/trentm/node-ldapauth/issues"
  },
  "contributors": [
    {
      "name": "Trent Mick",
      "email": "trentm@gmail.com",
      "url": "http://trentm.com"
    },
    {
      "name": "Jacques Marneweck",
      "url": "https://github.com/jacques"
    },
    {
      "name": "Vesa PoikajÃ¤rvi",
      "url": "https://github.com/vesse"
    }
  ],
  "dependencies": {
    "assert-plus": "0.1.4",
    "backoff": "2.3.0",
    "bcryptjs": "^1.0.2",
    "ldapjs": "github:dimensionsoftware/node-ldapjs",
    "lru-cache": "2.0.4",
    "once": "1.3.0"
  },
  "description": "Authenticate against an LDAP server",
  "devDependencies": {},
  "engines": [
    "node >=0.8.0"
  ],
  "gitHead": "b4338f3f1d904e3ffb1f7054a841f1f313060b61",
  "homepage": "https://github.com/trentm/node-ldapauth#readme",
  "keywords": [
    "authenticate",
    "ldap",
    "authentication",
    "auth"
  ],
  "license": {
    "type": "MIT",
    "url": "https://github.com/trentm/node-ldapauth/raw/master/LICENSE"
  },
  "main": "./lib/ldapauth.js",
  "name": "ldapauth",
  "optionalDependencies": {},
  "readme": "A simple node.js lib to authenticate against an LDAP server.\n\n\n# Usage\n\n    var LdapAuth = require('ldapauth');\n    var options = {\n        url: 'ldaps://ldap.example.com:663',\n        ...\n    };\n    var auth = new LdapAuth(options);\n    ...\n    auth.authenticate(username, password, function(err, user) { ... });\n    ...\n    auth.close(function(err) { ... })\n\n\n# Install\n\n    npm install ldapauth\n\n\n# License\n\nMIT. See \"LICENSE\" file.\n\n\n# `LdapAuth` Config Options\n\n[Use the source Luke](https://github.com/trentm/node-ldapauth/blob/master/lib/ldapauth.js#L25-53)\n\n\n# express/connect basicAuth example\n\n    var connect = require('connect');\n    var LdapAuth = require('ldapauth');\n\n    // Config from a .json or .ini file or whatever.\n    var config = {\n      ldap: {\n        url: \"ldaps://ldap.example.com:636\",\n        adminDn: \"uid=myadminusername,ou=users,o=example.com\",\n        adminPassword: \"mypassword\",\n        searchBase: \"ou=users,o=example.com\",\n        searchFilter: \"(uid={{username}})\"\n      }\n    };\n\n    var ldap = new LdapAuth({\n      url: config.ldap.url,\n      adminDn: config.ldap.adminDn,\n      adminPassword: config.ldap.adminPassword,\n      searchBase: config.ldap.searchBase,\n      searchFilter: config.ldap.searchFilter,\n      //log4js: require('log4js'),\n      cache: true\n    });\n\n    var basicAuthMiddleware = connect.basicAuth(function (username, password, callback) {\n      ldap.authenticate(username, password, function (err, user) {\n        if (err) {\n          console.log(\"LDAP auth error: %s\", err);\n        }\n        callback(err, user)\n      });\n    });\n\n\n# Development\n\nCheck coding style before commit:\n\n    make check\n\nTo cut a release (tagging, npm publish, etc., see\n<https://github.com/trentm/cutarelease> for details):\n\n    make cutarelease\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/trentm/node-ldapauth.git"
  },
  "version": "2.3.0"
}
