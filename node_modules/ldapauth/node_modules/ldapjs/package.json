{
  "_args": [
    [
      {
        "raw": "ldapjs@github:dimensionsoftware/node-ldapjs",
        "scope": null,
        "escapedName": "ldapjs",
        "name": "ldapjs",
        "rawSpec": "github:dimensionsoftware/node-ldapjs",
        "spec": "github:dimensionsoftware/node-ldapjs",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:dimensionsoftware/node-ldapjs.git",
          "sshUrl": "git+ssh://git@github.com/dimensionsoftware/node-ldapjs.git",
          "httpsUrl": "git+https://github.com/dimensionsoftware/node-ldapjs.git",
          "gitUrl": "git://github.com/dimensionsoftware/node-ldapjs.git",
          "shortcut": "github:dimensionsoftware/node-ldapjs",
          "directUrl": "https://raw.githubusercontent.com/dimensionsoftware/node-ldapjs/master/package.json"
        }
      },
      "/home/moritz/Dropbox/Studium/Fulda/1_SS17/Cloud_Computing/Project/Git/WebChat/node_modules/ldapauth"
    ]
  ],
  "_from": "dimensionsoftware/node-ldapjs",
  "_id": "ldapjs@0.7.1",
  "_inCache": true,
  "_location": "/ldapauth/ldapjs",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ldapjs@github:dimensionsoftware/node-ldapjs",
    "scope": null,
    "escapedName": "ldapjs",
    "name": "ldapjs",
    "rawSpec": "github:dimensionsoftware/node-ldapjs",
    "spec": "github:dimensionsoftware/node-ldapjs",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:dimensionsoftware/node-ldapjs.git",
      "sshUrl": "git+ssh://git@github.com/dimensionsoftware/node-ldapjs.git",
      "httpsUrl": "git+https://github.com/dimensionsoftware/node-ldapjs.git",
      "gitUrl": "git://github.com/dimensionsoftware/node-ldapjs.git",
      "shortcut": "github:dimensionsoftware/node-ldapjs",
      "directUrl": "https://raw.githubusercontent.com/dimensionsoftware/node-ldapjs/master/package.json"
    }
  },
  "_requiredBy": [
    "/ldapauth"
  ],
  "_resolved": "git://github.com/dimensionsoftware/node-ldapjs.git#9211ccba4e3506dd0d69852d6398d2b2c1ebc3e0",
  "_shasum": "1ec8855d71e0c56ba792a47f4ef0177883121f8b",
  "_shrinkwrap": null,
  "_spec": "ldapjs@github:dimensionsoftware/node-ldapjs",
  "_where": "/home/moritz/Dropbox/Studium/Fulda/1_SS17/Cloud_Computing/Project/Git/WebChat/node_modules/ldapauth",
  "author": {
    "name": "Mark Cavage",
    "email": "mcavage@gmail.com"
  },
  "bin": {
    "ldapjs-add": "bin/ldapjs-add",
    "ldapjs-compare": "bin/ldapjs-compare",
    "ldapjs-delete": "bin/ldapjs-delete",
    "ldapjs-modify": "bin/ldapjs-modify",
    "ldapjs-search": "bin/ldapjs-search"
  },
  "bugs": {
    "url": "https://github.com/mcavage/node-ldapjs/issues"
  },
  "contributors": [
    {
      "name": "Craig Baker"
    },
    {
      "name": "Austin King",
      "email": "shout@ozten.com"
    },
    {
      "name": "Mathieu Lecarme",
      "email": "mathieu@garambrogne.net"
    },
    {
      "name": "Trent Mick",
      "email": "trentm@gmail.com"
    },
    {
      "name": "Yunong Xiao",
      "email": "yunong@joyent.com"
    },
    {
      "name": "Denis Vuyka",
      "email": "denis.vuyka@gmail.com"
    },
    {
      "name": "Pedro PalazÃ³n",
      "email": "kusorbox@gmail.com"
    },
    {
      "name": "Patrick Mooney",
      "email": "patrick.f.mooney@gmail.com"
    }
  ],
  "dependencies": {
    "asn1": "0.2.1",
    "assert-plus": "0.1.5",
    "bunyan": "0.22.1",
    "dashdash": "1.6.0",
    "pooling": "0.4.6"
  },
  "description": "LDAP client and server APIs",
  "devDependencies": {
    "node-uuid": "1.4.0",
    "tap": "0.4.1",
    "vasync": "1.4.3"
  },
  "directories": {
    "bin": "./bin",
    "lib": "./lib"
  },
  "engines": {
    "node": ">=0.8"
  },
  "gitHead": "9211ccba4e3506dd0d69852d6398d2b2c1ebc3e0",
  "homepage": "http://ldapjs.org",
  "main": "lib/index.js",
  "name": "ldapjs",
  "optionalDependencies": {},
  "readme": "# Ldapjs\n\n[!['Build status'][travis_image_url]][travis_page_url]\n\n[travis_image_url]: https://api.travis-ci.org/mcavage/node-ldapjs.png\n[travis_page_url]: https://travis-ci.org/mcavage/node-ldapjs\n\nldapjs makes the LDAP protocol a first class citizen in Node.js.\n\n## Usage\n\nFor full docs, head on over to <http://ldapjs.org>.\n\n    var ldap = require('ldapjs');\n\n    var server = ldap.createServer();\n\n    server.search('dc=example', function(req, res, next) {\n      var obj = {\n        dn: req.dn.toString(),\n        attributes: {\n          objectclass: ['organization', 'top'],\n              o: 'example'\n        }\n      };\n\n      if (req.filter.matches(obj.attributes))\n        res.send(obj);\n\n      res.end();\n    });\n\n    server.listen(1389, function() {\n      console.log('ldapjs listening at ' + server.url);\n    });\n\nTo run that, assuming you've got the [OpenLDAP](http://www.openldap.org/) client\non your system:\n\n    ldapsearch -H ldap://localhost:1389 -x -b dc=example objectclass=*\n\n## Installation\n\n    npm install ldapjs\n    \n## Formatting objectGUID attribute value\n\n    var ldap = require('ldapjs');\n    \n    ldap.Attribute.settings.guid_format = ldap.GUID_FORMAT_B;\n    \n    var client = ldap.createClient({\n      url: 'ldap://127.0.0.1/CN=test,OU=Development,DC=Home'\n    });\n    \n    var opts = {\n      filter: '(objectclass=user)',\n      scope: 'sub',\n      attributes: ['objectGUID']\n    };\n    \n    client.bind('username', 'password', function (err) {\n      client.search('CN=test,OU=Development,DC=Home', opts, function (err, search) {\n        search.on('searchEntry', function (entry) {\n          var user = entry.object;\n          console.log(user.objectGUID);\n        });\n      });\n    });\n\n_Note: for the sake of simplicity all checks and error handling was removed from the sample above._\n\nThe console output may be similar to the following (depending on the amount of users in the directory):\n\n    {a7667bb1-4aee-48ce-9d9d-a1193550deba}\n    {8d642ac8-14c6-4f27-ac5-94d39833da88}\n    \nAvailable formatting modes:\n\n    GUID_FORMAT_N\n        N specifier, 32 digits:\n        00000000000000000000000000000000\n    GUID_FORMAT_D\n        D specifier, 32 digits separated by hypens:\n        00000000-0000-0000-0000-000000000000\n    GUID_FORMAT_B\n        B specifier, 32 digits separated by hyphens, enclosed in braces:\n        {00000000-0000-0000-0000-000000000000}\n    GUID_FORMAT_P\n        P speficier, 32 digits separated by hyphens, enclosed in parentheses:\n        (00000000-0000-0000-0000-000000000000)\n    GUID_FORMAT_X\n        X speficier, four hexadecimal values enclosed in braces,\n        where the fourth value is a subset of eight hexadecimal values that is also enclosed in braces:\n        {0x00000000,0x0000,0x0000,{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}\n\nGuid formatting is unobtrusive by default. You should explicitly define formatting mode in order to enable it. \n\n## License\n\nMIT.\n\n## Bugs\n\nSee <https://github.com/mcavage/node-ldapjs/issues>.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/mcavage/node-ldapjs.git"
  },
  "scripts": {
    "test": "tap ./test"
  },
  "version": "0.7.1"
}
